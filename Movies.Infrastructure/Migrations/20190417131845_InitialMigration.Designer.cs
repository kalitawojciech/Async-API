// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies.Infrastructure.Contexts;

namespace Movies.Infrastructure.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20190417131845_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Movies.Core.Entities.Director", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new { Id = new Guid("11111111-1111-1111-1111-111111111111"), FirstName = "James", LastName = "Cameron" },
                        new { Id = new Guid("11111111-1111-1111-1111-111111111112"), FirstName = "Steven", LastName = "Spielberg" }
                    );
                });

            modelBuilder.Entity("Movies.Core.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<Guid>("DirectorId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");

                    b.HasData(
                        new { Id = new Guid("21111111-1111-1111-1111-111111111111"), Description = "Avatar's description.", DirectorId = new Guid("11111111-1111-1111-1111-111111111111"), Title = "Avatar" },
                        new { Id = new Guid("21111111-1111-1111-1111-111111111112"), Description = "Jurassic Park's description.", DirectorId = new Guid("11111111-1111-1111-1111-111111111112"), Title = "Jurassic Park" }
                    );
                });

            modelBuilder.Entity("Movies.Core.Entities.Movie", b =>
                {
                    b.HasOne("Movies.Core.Entities.Director", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
